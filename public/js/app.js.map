{"version":3,"sources":["InitGallery.js","topMenu.js"],"names":[],"mappingsfile":"app.js","sourcesContent":["\r\nfunction initGalery() {\r\n    jQuery(document).ready(function ($) {\r\n\r\n        var _CaptionTransitions = [];\r\n        _CaptionTransitions[\"L\"] = {\r\n            $Duration: 900,\r\n            x: 0.6,\r\n            $Easing: {$Left: $JssorEasing$.$EaseInOutSine},\r\n            $Opacity: 2\r\n        };\r\n        _CaptionTransitions[\"R\"] = {\r\n            $Duration: 900,\r\n            x: -0.6,\r\n            $Easing: {$Left: $JssorEasing$.$EaseInOutSine},\r\n            $Opacity: 2\r\n        };\r\n        _CaptionTransitions[\"T\"] = {$Duration: 900, y: 0.6, $Easing: {$Top: $JssorEasing$.$EaseInOutSine}, $Opacity: 2};\r\n        _CaptionTransitions[\"B\"] = {\r\n            $Duration: 900,\r\n            y: -0.6,\r\n            $Easing: {$Top: $JssorEasing$.$EaseInOutSine},\r\n            $Opacity: 2\r\n        };\r\n        _CaptionTransitions[\"ZMF|10\"] = {\r\n            $Duration: 900,\r\n            $Zoom: 11,\r\n            $Easing: {$Zoom: $JssorEasing$.$EaseOutQuad, $Opacity: $JssorEasing$.$EaseLinear},\r\n            $Opacity: 2\r\n        };\r\n        _CaptionTransitions[\"RTT|10\"] = {\r\n            $Duration: 900,\r\n            $Zoom: 11,\r\n            $Rotate: 1,\r\n            $Easing: {\r\n                $Zoom: $JssorEasing$.$EaseOutQuad,\r\n                $Opacity: $JssorEasing$.$EaseLinear,\r\n                $Rotate: $JssorEasing$.$EaseInExpo\r\n            },\r\n            $Opacity: 2,\r\n            $Round: {$Rotate: 0.8}\r\n        };\r\n        _CaptionTransitions[\"RTT|2\"] = {\r\n            $Duration: 900,\r\n            $Zoom: 3,\r\n            $Rotate: 1,\r\n            $Easing: {\r\n                $Zoom: $JssorEasing$.$EaseInQuad,\r\n                $Opacity: $JssorEasing$.$EaseLinear,\r\n                $Rotate: $JssorEasing$.$EaseInQuad\r\n            },\r\n            $Opacity: 2,\r\n            $Round: {$Rotate: 0.5}\r\n        };\r\n        _CaptionTransitions[\"RTTL|BR\"] = {\r\n            $Duration: 900,\r\n            x: -0.6,\r\n            y: -0.6,\r\n            $Zoom: 11,\r\n            $Rotate: 1,\r\n            $Easing: {\r\n                $Left: $JssorEasing$.$EaseInCubic,\r\n                $Top: $JssorEasing$.$EaseInCubic,\r\n                $Zoom: $JssorEasing$.$EaseInCubic,\r\n                $Opacity: $JssorEasing$.$EaseLinear,\r\n                $Rotate: $JssorEasing$.$EaseInCubic\r\n            },\r\n            $Opacity: 2,\r\n            $Round: {$Rotate: 0.8}\r\n        };\r\n        _CaptionTransitions[\"CLIP|LR\"] = {\r\n            $Duration: 900,\r\n            $Clip: 15,\r\n            $Easing: {$Clip: $JssorEasing$.$EaseInOutCubic},\r\n            $Opacity: 2\r\n        };\r\n        _CaptionTransitions[\"MCLIP|L\"] = {\r\n            $Duration: 900,\r\n            $Clip: 1,\r\n            $Move: true,\r\n            $Easing: {$Clip: $JssorEasing$.$EaseInOutCubic}\r\n        };\r\n        _CaptionTransitions[\"MCLIP|R\"] = {\r\n            $Duration: 900,\r\n            $Clip: 2,\r\n            $Move: true,\r\n            $Easing: {$Clip: $JssorEasing$.$EaseInOutCubic}\r\n        };\r\n\r\n        var options = {\r\n            $FillMode: 2,                                       //[Optional] The way to fill image in slide, 0 stretch, 1 contain (keep aspect ratio and put all inside slide), 2 cover (keep aspect ratio and cover whole slide), 4 actual size, 5 contain for large image, actual size for small image, default value is 0\r\n            $AutoPlay: true,                                    //[Optional] Whether to auto play, to enable slideshow, this option must be set to true, default value is false\r\n            $AutoPlayInterval: 4000,                            //[Optional] Interval (in milliseconds) to go for next slide since the previous stopped if the slider is auto playing, default value is 3000\r\n            $PauseOnHover: 1,                                   //[Optional] Whether to pause when mouse over if a slider is auto playing, 0 no pause, 1 pause for desktop, 2 pause for touch device, 3 pause for desktop and touch device, 4 freeze for desktop, 8 freeze for touch device, 12 freeze for desktop and touch device, default value is 1\r\n\r\n            $ArrowKeyNavigation: true,   \t\t\t            //[Optional] Allows keyboard (arrow key) navigation or not, default value is false\r\n            $SlideEasing: $JssorEasing$.$EaseOutQuint,          //[Optional] Specifies easing for right to left animation, default value is $JssorEasing$.$EaseOutQuad\r\n            $SlideDuration: 800,                               //[Optional] Specifies default duration (swipe) for slide in milliseconds, default value is 500\r\n            $MinDragOffsetToSlide: 20,                          //[Optional] Minimum drag offset to trigger slide , default value is 20\r\n            //$SlideWidth: 600,                                 //[Optional] Width of every slide in pixels, default value is width of 'slides' container\r\n            //$SlideHeight: 300,                                //[Optional] Height of every slide in pixels, default value is height of 'slides' container\r\n            $SlideSpacing: 0, \t\t\t\t\t                //[Optional] Space between each slide in pixels, default value is 0\r\n            $DisplayPieces: 1,                                  //[Optional] Number of pieces to display (the slideshow would be disabled if the value is set to greater than 1), the default value is 1\r\n            $ParkingPosition: 0,                                //[Optional] The offset position to park slide (this options applys only when slideshow disabled), default value is 0.\r\n            $UISearchMode: 1,                                   //[Optional] The way (0 parellel, 1 recursive, default value is 1) to search UI components (slides container, loading screen, navigator container, arrow navigator container, thumbnail navigator container etc).\r\n            $PlayOrientation: 1,                                //[Optional] Orientation to play slide (for auto play, navigation), 1 horizental, 2 vertical, 5 horizental reverse, 6 vertical reverse, default value is 1\r\n            $DragOrientation: 1,                                //[Optional] Orientation to drag slide, 0 no drag, 1 horizental, 2 vertical, 3 either, default value is 1 (Note that the $DragOrientation should be the same as $PlayOrientation when $DisplayPieces is greater than 1, or parking position is not 0)\r\n\r\n            $CaptionSliderOptions: {                            //[Optional] Options which specifies how to animate caption\r\n                $Class: $JssorCaptionSlider$,                   //[Required] Class to create instance to animate caption\r\n                $CaptionTransitions: _CaptionTransitions,       //[Required] An array of caption transitions to play caption, see caption transition section at jssor slideshow transition builder\r\n                $PlayInMode: 1,                                 //[Optional] 0 None (no play), 1 Chain (goes after main slide), 3 Chain Flatten (goes after main slide and flatten all caption animations), default value is 1\r\n                $PlayOutMode: 3                                 //[Optional] 0 None (no play), 1 Chain (goes before main slide), 3 Chain Flatten (goes before main slide and flatten all caption animations), default value is 1\r\n            },\r\n\r\n            $BulletNavigatorOptions: {                          //[Optional] Options to specify and enable navigator or not\r\n                $Class: $JssorBulletNavigator$,                 //[Required] Class to create navigator instance\r\n                $ChanceToShow: 2,                               //[Required] 0 Never, 1 Mouse Over, 2 Always\r\n                $AutoCenter: 1,                                 //[Optional] Auto center navigator in parent container, 0 None, 1 Horizontal, 2 Vertical, 3 Both, default value is 0\r\n                $Steps: 1,                                      //[Optional] Steps to go for each navigation request, default value is 1\r\n                $Lanes: 1,                                      //[Optional] Specify lanes to arrange items, default value is 1\r\n                $SpacingX: 8,                                   //[Optional] Horizontal space between each item in pixel, default value is 0\r\n                $SpacingY: 8,                                   //[Optional] Vertical space between each item in pixel, default value is 0\r\n                $Orientation: 1                                 //[Optional] The orientation of the navigator, 1 horizontal, 2 vertical, default value is 1\r\n            },\r\n\r\n            $ArrowNavigatorOptions: {                           //[Optional] Options to specify and enable arrow navigator or not\r\n                $Class: $JssorArrowNavigator$,                  //[Requried] Class to create arrow navigator instance\r\n                $ChanceToShow: 1,                               //[Required] 0 Never, 1 Mouse Over, 2 Always\r\n                $AutoCenter: 2,                                 //[Optional] Auto center arrows in parent container, 0 No, 1 Horizontal, 2 Vertical, 3 Both, default value is 0\r\n                $Steps: 1                                       //[Optional] Steps to go for each navigation request, default value is 1\r\n            }\r\n        };\r\n\r\n        var jssor_slider1 = new $JssorSlider$(\"slider1_container\", options);\r\n\r\n        //responsive code begin\r\n        //you can remove responsive code if you don't want the slider scales while window resizes\r\n        function ScaleSlider() {\r\n            var bodyWidth = document.body.clientWidth;\r\n            if (bodyWidth)\r\n                jssor_slider1.$ScaleWidth(Math.min(bodyWidth, 1920));\r\n            else\r\n                window.setTimeout(ScaleSlider, 30);\r\n        }\r\n\r\n        ScaleSlider();\r\n\r\n        $(window).bind(\"load\", ScaleSlider);\r\n        $(window).bind(\"resize\", ScaleSlider);\r\n        $(window).bind(\"orientationchange\", ScaleSlider);\r\n\r\n\r\n        jssor_slider1.$On($JssorSlider$.$EVT_PARK, function (slideIndex, fromIndex) {\r\n            console.log(slideIndex, fromIndex);\r\n        });\r\n\r\n    });\r\n}\r\n","/**\n * Created by sergio on 30/08/15.\n */\n\nfunction TopMenu(options,currenNumber) {\n    var that = this;\n\n    this.options = options;\n    var showing = false;\n\n    this.$header = $('header');\n    this.$title = $('#title');\n    this.$topMenuList = $('#topMenuList');\n    this.$loginButton = $('#loginButton');\n    this.$login = $('#login');\n    this.$mainContainer = $('#mainContainer');\n    this.current = this.options[currenNumber];\n\n    this.fillOptionData=function (option) {\n        var $text = $('<a>',{\n            text : option.title,\n            href : '/'+option.view\n        });\n        $('<li>').css('background-color', option.color)\n            .append($text)\n            .appendTo(that.$topMenuList);\n    };\n\n    this.onHoverIn=function () {\n        that.$topMenuList.addClass('showing');\n        var $element = that.$topMenuList.children().first()\n        showing = true;\n        function callToEnd() {\n            if ($element.length) {\n                var $back = $element;\n                $element = $back.next();\n                if (showing) {\n                    $back.addClass('showing');\n                    setTimeout(callToEnd, 100);\n                }\n            }\n        }\n        callToEnd();\n    };\n\n    this.onHoverOut=function () {\n        var $element = that.$topMenuList.children().last()\n        showing = false;\n        function callToEnd() {\n            if ($element.length) {\n                var $back = $element;\n                $element = $back.prev();\n                if (!showing) {\n                    $back.removeClass('showing');\n                    setTimeout(callToEnd, 100);\n                }\n            } else {\n                that.$topMenuList.removeClass('showing');\n            }\n        }\n        callToEnd();\n        that.changeData(that.current);\n    };\n\n    this.onHoverOption = function (index) {\n        $(this).hover(function () {\n            that.changeData(options[index]);\n        });\n    };\n\n    this.changeData = function(option){\n        that.$header.css({'background-color': option.color});\n        that.$topMenuList.css({'background-color': option.color});\n        that.$login.css({'background-color': option.color});\n        that.$title.find('h1').text(option.title);\n        that.$mainContainer.css({'border-color': option.color});\n    }\n\n\n\n    this.options.forEach(this.fillOptionData);\n    this.$header.children('#title').hover(this.onHoverIn, this.onHoverOut);\n    this.$topMenuList.children().each(this.onHoverOption);\n    this.changeData(this.current);\n}"],"sourceRoot":"/source/"}